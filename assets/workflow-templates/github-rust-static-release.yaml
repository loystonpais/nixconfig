
#  A template for a Rust static release workflow.
#  Replace <CRATE_NAME> with the crate name

name: Rust Static Release Template

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install necessary dependencies for a static build
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools xz-utils
          rustup target add x86_64-unknown-linux-musl

      # Build the project
      - name: Build static binary
        run: |
          cargo build --release --target=x86_64-unknown-linux-musl
          strip target/x86_64-unknown-linux-musl/release/<CRATE_NAME>

      # Compress the output binary
      - name: Compress binary
        run: |
          mkdir -p release
          tar -czvf release/<CRATE_NAME>-x86_64-linux.tar.gz -C target/x86_64-unknown-linux-musl/release <CRATE_NAME>

      
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/<CRATE_NAME>-x86_64-linux.tar.gz
          asset_name: <CRATE_NAME>-x86_64-linux.tar.gz
          asset_content_type: application/gzip